[
  {
    "id": 1,
    "name": "SNS",
    "mainImg": ["SNSMain.png"],
    "imgs": [
      "SNSMain.png",
      "SNSLogin.png",
      "SNSPost.png",
      "SNSChat.png",
      "SNSInfo",
      "SNSDark"
    ],
    "description": "회원가입, 로그인, 게시글 CRUD와 팔로우, 추천 및 검색 기능을 구현한 SNS 사이트",
    "url": "https://tomyhasblog.vercel.app",
    "gitHub": "https://github.com/tomyhas59/blog",
    "detail": {
      "client": [
        "상태 관리를 위한 Redux",
        "TypeScript로 코드 안정성 확보",
        "styled-components를 통한 유연한 스타일링",
        "Socket.IO로 실시간 채팅 및 알림 기능 구현",
        "검색 기능 구현으로 사용자 경험 향상"
      ],
      "server": [
        "Node.js와 Express로 구축한 서버",
        "JWT를 활용한 인증 시스템",
        "PostgreSQL과 Sequelize로 데이터 관리",
        "Socket.IO를 통한 실시간 웹 소켓 기능"
      ]
    }
  },
  {
    "id": 2,
    "name": "쇼핑몰",
    "mainImg": ["shopMain.png"],
    "imgs": [
      "shopMain.png",
      "shopProductDetail.png",
      "shopProducts.png",
      "shopCart.png"
    ],
    "description": "간단한 회원가입, 로그인, 상품 리뷰, 장바구니 담기 기능 쇼핑몰 사이트",
    "url": "https://tmshop.vercel.app/",
    "gitHub": "https://github.com/tomyhas59/shop",
    "detail": {
      "client": [
        "Next.js와 TypeScript 사용",
        "GraphQL 뮤테이션으로 서버 통신",
        "Recoil을 통한 전역 상태 관리",
        "Firebase Authentication으로 로그인 처리"
      ],
      "server": [
        "Apollo Server로 GraphQL 쿼리 처리",
        "Firebase Firestore를 이용한 데이터 관리"
      ]
    }
  },
  {
    "id": 3,
    "name": "심심풀이",
    "mainImg": ["game1.png"],
    "imgs": ["game1.png", "game2.png", "game3.png"],
    "description": "React를 활용한 간단한 웹 게임",
    "url": "https://tmsgame.vercel.app",
    "gitHub": "https://github.com/tomyhas59/reactGame",
    "detail": {
      "client": ["JavaScript와 React로 개발한 웹 게임"]
    }
  },
  {
    "id": 4,
    "name": "가계부",
    "mainImg": ["household1.png"],
    "imgs": ["householdMain", "household1.png", "household2.png"],
    "description": "웹 기반 가계부 애플리케이션",
    "url": "https://tomyhas59.github.io/household-book",
    "gitHub": "https://github.com/tomyhas59/household-book",
    "detail": {
      "client": ["TypeScript로 안정성 강화", "Recoil을 통한 전역 상태 관리"],
      "server": ["Java Spring Boot로 서버 구축", "MariaDB로 데이터 관리"]
    }
  }
]
